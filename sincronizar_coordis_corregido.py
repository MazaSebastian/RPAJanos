#!/usr/bin/env python3
"""
Script para sincronizar datos del API con localStorage de COORDIS
CORREGIDO: Asigna sal√≥n espec√≠fico para que se muestren en la interfaz
"""

import requests
import json
import webbrowser
from datetime import datetime

def sincronizar_coordis_corregido():
    """Sincroniza datos del API con localStorage de COORDIS, asignando sal√≥n"""
    
    print("üîÑ SINCRONIZANDO COORDIS CON API (CORREGIDO)")
    print("=" * 50)
    
    # Obtener datos del API
    try:
        response = requests.get('http://localhost:3002/api/coordinations', timeout=10)
        if response.status_code != 200:
            print(f"‚ùå Error del API: {response.status_code}")
            return False
            
        api_data = response.json()
        coordinations = api_data.get('data', [])
        print(f"üìä API tiene {len(coordinations)} coordinaciones")
        
    except Exception as e:
        print(f"‚ùå Error conectando al API: {e}")
        return False
    
    # Convertir datos del API al formato de localStorage
    localStorage_data = []
    
    for coord in coordinations:
        # Mapear campos del API al formato de la interfaz
        formatted_coord = {
            "id": coord.get('id'),
            "title": coord.get('title', ''),
            "client_name": coord.get('client_name', ''),
            "celular": coord.get('celular', ''),
            "celular_2": coord.get('celular_2', ''),
            "honoree_name": coord.get('honoree_name', ''),
            "event_type": mapear_tipo_evento(coord.get('title', '')),
            "event_date": coord.get('event_date', ''),
            "codigo_evento": coord.get('codigo_evento', ''),
            "pack": coord.get('pack', ''),
            "salon": coord.get('salon', ''),
            "status": coord.get('status', 'pendiente'),
            "notes": f"Importado autom√°ticamente el {datetime.now().strftime('%d/%m/%Y %H:%M')}",
            "created_at": coord.get('created_at', ''),
            "updated_at": coord.get('updated_at', ''),
            # CR√çTICO: Asignar sal√≥n espec√≠fico para que se muestre
            "salon_id": 1,  # Sal√≥n DOT (ID: 1)
            "salon_name": "DOT"
        }
        
        localStorage_data.append(formatted_coord)
    
    # Crear script JavaScript para inyectar en localStorage
    js_script = f"""
    // Sincronizaci√≥n autom√°tica de coordinaciones (CORREGIDO)
    console.log('üîÑ Sincronizando coordinaciones con sal√≥n asignado...');
    
    const coordinaciones = {json.dumps(localStorage_data, ensure_ascii=False)};
    
    // Guardar en localStorage con formato de sal√≥n
    localStorage.setItem('coordinations', JSON.stringify(coordinaciones));
    
    // CR√çTICO: Tambi√©n guardar en formato de sal√≥n espec√≠fico
    localStorage.setItem('salon_1_coordinations', JSON.stringify(coordinaciones));
    
    console.log(`‚úÖ ${{coordinaciones.length}} coordinaciones sincronizadas con sal√≥n DOT`);
    console.log('üìä Coordinaciones:', coordinaciones);
    
    // Recargar la p√°gina para mostrar los cambios
    window.location.reload();
    """
    
    # Guardar script en archivo
    with open('sincronizar_coordis_corregido.js', 'w', encoding='utf-8') as f:
        f.write(js_script)
    
    print(f"‚úÖ {len(localStorage_data)} coordinaciones convertidas")
    print("üìù Script JavaScript creado: sincronizar_coordis_corregido.js")
    print("\nüîß INSTRUCCIONES:")
    print("1. Abre http://localhost:3001 en el navegador")
    print("2. Abre las herramientas de desarrollador (F12)")
    print("3. Ve a la pesta√±a 'Console'")
    print("4. Copia y pega el contenido de 'sincronizar_coordis_corregido.js'")
    print("5. Presiona Enter para ejecutar")
    print("6. La p√°gina se recargar√° autom√°ticamente")
    print("7. Ahora deber√≠as ver TODAS las coordinaciones en el dashboard")
    
    return True

def mapear_tipo_evento(title):
    """Mapea el t√≠tulo a tipo de evento para el select"""
    title_lower = title.lower()
    
    if '15' in title_lower or 'xv' in title_lower:
        return 'xv'
    elif 'boda' in title_lower or 'casamiento' in title_lower:
        return 'casamiento'
    elif 'cumplea√±os' in title_lower or 'cumpleanos' in title_lower:
        return 'cumpleanos'
    elif 'empresarial' in title_lower or 'corporativo' in title_lower:
        return 'corporativo'
    elif 'religioso' in title_lower:
        return 'religioso'
    else:
        return 'corporativo'  # Default

if __name__ == "__main__":
    try:
        success = sincronizar_coordis_corregido()
        if success:
            print("\nüéâ SINCRONIZACI√ìN CORREGIDA COMPLETADA")
        else:
            print("\n‚ùå ERROR EN LA SINCRONIZACI√ìN")
    except Exception as e:
        print(f"\n‚ùå ERROR CR√çTICO: {e}")
        exit(1)
